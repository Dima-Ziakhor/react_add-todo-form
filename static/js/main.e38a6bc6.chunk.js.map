{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","name","email","className","TodoInfo","state","completed","props","todoPrepared","changeStatus","setState","this","title","user","classNames","todoList__status__completed","style","color","type","onChange","checked","React","Component","TodoList","todoList","map","item","id","users","username","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","preparedTodos","userId","todo","find","person","App","usersCopy","todosCopy","todoTitle","selectedUserId","isSelectUser","isEnterTitle","handleValidation","handleAddTitle","event","target","value","handleSelecte","Number","handleSubmit","preventDefault","sort","a","b","length","onSubmit","htmlFor","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e38a6bc6.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\nimport './UserInfo.scss';\n\nexport const UserInfo: React.FC<User> = ({ name, email }) => {\n  return (\n    <div className=\"todoList__userInfo\">\n      <h3 className=\"todoList__userName\">{`Name: ${name}`}</h3>\n      <div className=\"todoList__userEmail\">{`E-mail: ${email}`}</div>\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { TodoPrepared } from '../../types/TodoPrepared';\n\nimport './TodoInfo.scss';\n\ntype Props = {\n  todoPrepared: TodoPrepared;\n};\n\ntype State = {\n  completed: boolean;\n};\n\nexport class TodoInfo extends React.Component<Props, State> {\n  state = {\n    completed: this.props.todoPrepared.completed,\n  };\n\n  changeStatus = () => {\n    this.setState((state) => ({\n      completed: !state.completed,\n    }));\n  };\n\n  render() {\n    const { title, completed, user } = this.props.todoPrepared;\n\n    return (\n      <>\n        <div className=\"todoList__info\">\n          <h2 className=\"todoList__title\">\n            {`Task: ${title}`}\n          </h2>\n          <div className={classNames('todoList__status',\n            {\n              todoList__status__completed: completed,\n            })}\n          >\n            <span\n              style={this.state.completed ? { color: 'green' } : { color: 'red' }}\n            >\n              Completed:\n            </span>\n            {' '}\n            <input\n              type=\"checkbox\"\n              onChange={this.changeStatus}\n              checked={this.state.completed}\n            />\n          </div>\n        </div>\n        {user && (\n          <UserInfo {...user} />\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { TodoPrepared } from '../../types/TodoPrepared';\n\nimport './TodoList.scss';\n\ntype Props = {\n  todoList: TodoPrepared[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todoList }) => {\n  return (\n    <ul className=\"todoList\">\n      {\n        todoList.map(item => (\n          <li className=\"todoList__item\" key={item.id}>\n            <TodoInfo todoPrepared={item} />\n          </li>\n        ))\n      }\n    </ul>\n  );\n};\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport { User } from './types/User';\nimport { TodoPrepared } from './types/TodoPrepared';\n\nimport './App.scss';\n\nimport users from './api/users';\nimport todos from './api/todos';\n\nconst preparedTodos = todos.map(todo => {\n  const user = users.find(person => person.id === todo.userId);\n\n  return {\n    user: user || null,\n    ...todo,\n  };\n});\n\ntype State = {\n  usersCopy: User[],\n  todosCopy: TodoPrepared[],\n  todoTitle: string,\n  selectedUserId: number,\n  isSelectUser: boolean,\n  isEnterTitle: boolean,\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    usersCopy: [...users],\n    todosCopy: [...preparedTodos],\n    todoTitle: '',\n    selectedUserId: 0,\n    isSelectUser: false,\n    isEnterTitle: false,\n  };\n\n  handleValidation = () => {\n    if (!this.state.todoTitle) {\n      this.setState({\n        isEnterTitle: true,\n      });\n    } else if (!this.state.selectedUserId) {\n      this.setState({\n        isSelectUser: true,\n      });\n    }\n\n    return this.state.selectedUserId && this.state.todoTitle;\n  };\n\n  handleAddTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      todoTitle: event.target.value,\n      isEnterTitle: false,\n    });\n  };\n\n  handleSelecte = (event :React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      selectedUserId: Number(event.target.value),\n      isSelectUser: false,\n    });\n  };\n\n  handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!this.handleValidation()) {\n      return;\n    }\n\n    this.setState((state) => ({\n      todoTitle: '',\n      selectedUserId: 0,\n      isSelectUser: false,\n      isEnterTitle: false,\n      todosCopy: [\n        ...state.todosCopy,\n        {\n          userId: state.selectedUserId,\n          id: state.todosCopy.sort((a, b) => a.id - b.id)[state.todosCopy.length - 1].id,\n          title: state.todoTitle,\n          completed: false,\n          user: users.find(person => person.id === state.selectedUserId) || null,\n        },\n      ],\n    }));\n  };\n\n  render() {\n    const {\n      todoTitle,\n      selectedUserId,\n      isSelectUser,\n      isEnterTitle,\n      usersCopy,\n      todosCopy,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__form-wrapper\">\n          <form className=\"App__form\" onSubmit={this.handleSubmit}>\n            <label className=\"App__title\" htmlFor=\"title\">\n              Enter todo title:\n              <input\n                id=\"title\"\n                className=\"App__input-title\"\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Todo title\"\n                onChange={this.handleAddTitle}\n                value={todoTitle}\n              />\n              <span className={classNames('App__error', { 'App__error--active': isEnterTitle })}>\n                Please enter the title\n              </span>\n            </label>\n\n            <label className=\"App__select-user\" htmlFor=\"users\">\n              Select user:\n              <select\n                className=\"App__select\"\n                name=\"users\"\n                id=\"users\"\n                onChange={this.handleSelecte}\n                value={selectedUserId}\n              >\n                <option\n                  className=\"App__option\"\n                  value=\"0\"\n                  key=\"0\"\n                >\n                  Choose a user\n                </option>\n                {\n                  usersCopy.map(user => (\n                    <option\n                      className=\"App__option\"\n                      value={user.id}\n                      key={user.id}\n                    >\n                      {user.name}\n                    </option>\n                  ))\n                }\n              </select>\n              <span className={classNames('App__error', { 'App__error--active': isSelectUser })}>\n                Please choose a user\n              </span>\n            </label>\n\n            <button\n              className=\"App__button\"\n              type=\"submit\"\n            >\n              Add\n            </button>\n          </form>\n        </div>\n        <div className=\"App__todos-wrapper\">\n          <TodoList todoList={todosCopy} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}